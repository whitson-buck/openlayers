import { Plugin } from 'vite';
import { WatchOptions } from 'chokidar';

/**
 * @param content content of file
 * @param filename absolute path to the file
 */
declare type TransformFunc = (content: string, filename: string) => string;
declare type Target = {
    /**
     * path or glob
     */
    src: string | string[];
    /**
     * destination
     */
    dest: string;
    /**
     * rename
     */
    rename?: string;
    /**
     * transform
     *
     * `src` should only include files when this option is used
     */
    transform?: TransformFunc;
    /**
     * Should timestamps on copied files be presered?
     *
     * When false, timestamp behavior is OS-dependent.
     * Ignored for transformed files.
     * @default false
     */
    preserveTimestamps?: boolean;
};
declare type ViteStaticCopyOptions = {
    /**
     * Array of targets to copy.
     */
    targets: Target[];
    /**
     * Remove the directory structure.
     * @default true
     */
    flatten?: boolean;
    watch?: {
        /**
         * Watch options
         */
        options?: WatchOptions;
        /**
         * Reloads page on file change when true
         * @default false
         */
        reloadPageOnChange?: boolean;
    };
};

declare const viteStaticCopy: (options: ViteStaticCopyOptions) => Plugin[];

export { Target, TransformFunc, ViteStaticCopyOptions, viteStaticCopy };
